
include(cmake/utils.cmake)

# Prints accumulated tiny-dnn configuration summary
# Usage:
#   tinydnn_print_configuration_summary()

function(tinydnn_print_configuration_summary)

  tinydnn_merge_flag_lists(__flags_rel CMAKE_CXX_FLAGS_RELEASE CMAKE_CXX_FLAGS)
  tinydnn_merge_flag_lists(__flags_deb CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS)

  tinydnn_status("")
  tinydnn_status("******************* tinydnn Configuration Summary *******************")
  tinydnn_status("General:")
  tinydnn_status("  Version           :   ${PROJECT_VERSION}")
  tinydnn_status("  System            :   ${CMAKE_SYSTEM_NAME}")
  tinydnn_status("  C++ compiler      :   ${CMAKE_CXX_COMPILER}")
  tinydnn_status("  Release CXX flags :   ${__flags_rel}")
  tinydnn_status("  Debug CXX flags   :   ${__flags_deb}")
  tinydnn_status("  Build type        :   ${CMAKE_BUILD_TYPE}")
  tinydnn_status("")
  tinydnn_status("  BUILD_EXAMPLES    :   ${BUILD_EXAMPLES}")
  tinydnn_status("  BUILD_TESTS       :   ${BUILD_TESTS}")
  tinydnn_status("  BUILD_DOCS        :   ${BUILD_DOCS}")
  tinydnn_status("  BUILD_BENCHMARKS  :   ${BUILD_BENCHMARKS}")
  tinydnn_status("")
  tinydnn_status("Dependencies:")
  tinydnn_status("  SSE               : " USE_SSE AND COMPILER_HAS_SSE_FLAG THEN "Yes" ELSE "No")
  tinydnn_status("  AVX               : " USE_AVX AND COMPILER_HAS_AVX_FLAG THEN "Yes" ELSE "No")
  tinydnn_status("  AVX2              : " USE_AVX2 AND COMPILER_HAS_AVX2_FLAG THEN "Yes" ELSE "No")
  tinydnn_status("  Pthread           : " USE_PTHREAD THEN "Yes" ELSE "No")
  tinydnn_status("  TBB               : " USE_TBB AND TBB_FOUND THEN "Yes (ver. ${TBB_INTERFACE_VERSION})" ELSE "No")
  tinydnn_status("  OMP               : " USE_OMP AND OMP_FOUND THEN "Yes" ELSE "No")
  tinydnn_status("  NNPACK            : " USE_NNPACK AND NNPACK_FOUND THEN "Yes" ELSE "No")
  tinydnn_status("  Intel MKL         : " USE_INTEL_MKL AND INTELMKL_FOUND THEN "Yes" ELSE "No")
  tinydnn_status("  CBLAS             : " USE_CBLAS AND BLAS_FOUND THEN "Yes" ELSE "No")
  tinydnn_status("  OpenCL            : " USE_OPENCL AND OpenCL_FOUND THEN "Yes (ver. ${OpenCL_VERSION_STRING})" ELSE "No")
  tinydnn_status("  LibDNN            : " USE_LIBDNN AND GreenteaLibDNN_FOUND THEN "Yes (ver. ${GreenteaLibDNN_VERSION})" ELSE "No")
  tinydnn_status("")
  tinydnn_status("Utilities:")
  tinydnn_status("  OpenCV            : " USE_OPENCV AND OpenCV_FOUND THEN "Yes (ver. ${OpenCV_VERSION})" ELSE "No")
  tinydnn_status("  Serializer        : " USE_SERIALIZER THEN "Yes" ELSE "No")
  tinydnn_status("  Image API         : " USE_IMAGE_API THEN "Yes" ELSE "No")
  tinydnn_status("  Gemmlowp          : " USE_GEMMLOWP THEN "Yes" ELSE "No")
  tinydnn_status("")
  tinydnn_status("Install:")
  tinydnn_status("  Install path      :   ${CMAKE_INSTALL_PREFIX}")
  tinydnn_status("")
endfunction()
